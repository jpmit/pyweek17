class Powerbar(BaseSprite):
    WIDTH = 300
    HEIGHT = 80
    BORDER = 5
    MAXFULL = 1.0
    def __init__(self):
        super(Powerbar, self).__init__()

        self.empty_bar()

        # fullness is between 0.0 and 1.0 (the amount of 'red' in bar)
        self.fullness = 0.0

        # are we in the launch process?
        self.inlaunch = False

        # are we in the being fired process?
        self.infired = False

    def empty_bar(self):
        """Draw an empty power bar at the correct place on the screen"""
        
        # surface starts as a white rectangle
        self.image = pygame.Surface((Powerbar.WIDTH, Powerbar.HEIGHT))
        self.image.fill(const.WHITE)

        # draw the black border onto the white rectangle
        self.rect = self.image.get_rect()
        pygame.draw.rect(self.image, const.BLACK,
                         self.image.get_rect(),
                         Powerbar.BORDER)

        # position the image
        self.rect.centerx, self.rect.centery = (500,500)        
        

    def update(self, dt, game):
        if game.pressed[pygame.K_SPACE]:

            # we are in the launch process
            self.inlaunch = True
            
            if self.fullness < Powerbar.MAXFULL:
                # get new fullness of power bar
                self.fullness += dt * 1.0
                # set it to fullness if we have gone beyond it
                if self.fullness > Powerbar.MAXFULL:
                    self.fullness = Powerbar.MAXFULL
                    
                # surface for the red part of the status bar
                rsurf = pygame.Surface(((Powerbar.WIDTH - Powerbar.BORDER*2)*self.fullness,
                                        (Powerbar.HEIGHT - Powerbar.BORDER*2)))
                print self.image,rsurf, self.image.get_rect(), rsurf.get_rect()
                rsurf.fill(const.RED)
                # blit the red surface onto the main surface
                self.image.blit(rsurf, (Powerbar.BORDER, Powerbar.BORDER))

        else:
            # spacebar is not pressed
            if self.inlaunch:
                # finished the launch process
                self.inlaunch = False
                self.infired = True
                self.fullness = 0.0
                # draw an empty bar
                self.empty_bar()
